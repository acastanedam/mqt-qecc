name: cpp-linter

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

concurrency:
  group:              ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CC:  clang-14
  CXX: clang++-14

jobs:
  cpp-linter:
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install MPFR
        run:  sudo apt-get install libmpfr-dev
      - name: Cache FLINT
        id:   cache-flint2
        uses: actions/cache@v3
        with:
          path: flint2
          key:  cpp-linter-${{ runner.OS }}-${{ hashFiles('**/cpp-linter.yml') }}
      - name: Build FLINT2
        if:   steps.cache-flint2.outputs.cache-hit != 'true'
        run:  |
              git clone --branch trunk --depth 1 https://github.com/wbhart/flint2.git
              cd flint2
              ./configure
              make -j3
      - name: Install FLINT2
        run:  |
              cd flint2
              sudo make install
      - name: Generate compilation database
        run: cmake -S . -B build -DBINDINGS=ON -DBUILD_QECC_TESTS=ON -DCMAKE_EXPORT_COMPILE_COMMANDS=ON
      - name: Run cpp-linter
        id:   linter
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run:  |
              pipx run cpp-linter \
              --version=14 \
              --style="file" \
          --tidy-checks="" \
          --thread-comments=true \
          --files-changed-only=true \
          --ignore="build" \
          --database=build
      - name: Fail if linter found errors
        if: steps.linter.outputs.checks-failed > 0
        run: echo "Linter found errors" && exit 1
