name: Python Packaging

on:
  release:
    types: [published]
  pull_request:
  push:
    branches: [main]
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build_wheels:
    name: ${{ matrix.os }}${{ matrix.archname }}${{ matrix.libc }} wheels
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        arch: [x86_64]
        archname: [""]
        skip: ["*-musllinux_*"]
        libc: [""]
        include:
          - arch: arm64
            archname: "-arm64"
            os: macos-latest
          - arch: x86_64
            os: ubuntu-latest
            skip: "*-manylinux_*"
            libc: "-musl"

    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules: recursive
      - uses: ilammy/msvc-dev-cmd@v1
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.10.2
        env:
          CIBW_ARCHS_MACOS: ${{ matrix.arch }}
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_SKIP: ${{ matrix.skip }}
      - uses: actions/upload-artifact@v3
        with:
          path: ./wheelhouse/*.whl

  build_sdist:
    name: sdist
    runs-on: ubuntu-22.04
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
          submodules:  recursive
      - name: Build SDist
        run:  pipx run build --sdist
      - name: Install MPFR
        run:  sudo apt-get install libmpfr-dev
      - name: Cache FLINT
        id:   cache-flint2
        uses: actions/cache@v3
        with:
          path: flint2
          key:  sdist-${{ runner.OS }}-${{ hashFiles('**/deploy.yml') }}
      - name: Build FLINT2
        if:   steps.cache-flint2.outputs.cache-hit != 'true'
        run:  |
              git clone --branch trunk --depth 1 https://github.com/wbhart/flint2.git
              cd flint2
              ./configure
              make -j3
      - name: Install FLINT2
        run:  |
              cd flint2
              sudo make install
      - name: Install sdist
        run:  python -m pip install --verbose dist/*.tar.gz
      - uses: actions/upload-artifact@v3
        with:
          path: dist/*.tar.gz

  upload_pypi:
    needs: [build_wheels, build_sdist]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    steps:
      - uses: actions/download-artifact@v3
        with:
          name: artifact
          path: dist
      - uses: pypa/gh-action-pypi-publish@master
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          skip_existing: true
          verbose: true
