name: C++

on:
  pull_request:
  push:
    branches:
      - main
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 3

defaults:
  run:
    shell: bash

jobs:
  cpp-tests:
    name: Tests ${{ matrix.config.os }}
    runs-on: ${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - {
            os:               ubuntu-22.04,
            mpfr-install-cmd: "sudo apt-get install libmpfr-dev"
          }
          - {
            os: macos-11,
            mpfr-install-cmd: "brew install mpfr"
          }
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - name: Install MPFR
        run:  ${{ matrix.config.mpfr-install-cmd }}
      - name: Cache FLINT
        id:   cache-flint2
        uses: actions/cache@v3
        with:
          path: flint2
          key:  ci-${{ runner.OS }}-${{ hashFiles('**/ci.yml') }}
      - name: Build FLINT2
        if:   steps.cache-flint2.outputs.cache-hit != 'true'
        run: |
              git clone --branch trunk --depth 1 https://github.com/wbhart/flint2.git
              cd flint2
              ./configure
              make -j3
      - name: Install FLINT2
        run:  |
              cd flint2
              sudo make install
      - name: Configure CMake
        run: cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_QECC_TESTS=ON -DBINDINGS=ON
      - name: Build
        run:  cmake --build build --config Release
      - name:              Test
        working-directory: build/test
        run:               ctest -C Release --output-on-failure
      - if:   runner.os == 'Linux'
        name: Coverage
        run:  |
          cmake -S . -B buildCov -DCMAKE_BUILD_TYPE=Debug -DBUILD_QECC_TESTS=ON -DBINDINGS=ON -DCOVERAGE=ON
              cmake --build buildCov --config Debug --target qecc_test
              cd buildCov/test
              ctest -C Debug --output-on-failure
      - if:   runner.os == 'Linux'
        name: Upload coverage to Codecov
        uses: codecov/codecov-action@v3.1.1
        with:
          gcov:        true
          gcov_ignore: "extern/**/*"

  windows-tests:
    name:    Tests windows-2022
    runs-on: windows-2022
    defaults:
      run:
        shell: msys2 {0}
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: recursive
      - uses: msys2/setup-msys2@v2
        with:
          install: make mingw-w64-x86_64-clang mingw-w64-flint
      - name: Configure CMake
        run:  cmake -S . -B build -DCMAKE_BUILD_TYPE=Release -DBUILD_QECC_TESTS=ON -DBINDINGS=ON
        env:
          CC:  clang
          CXX: clang++
      - name: Build
        run:  cmake --build build --config Release --parallel 3
      - name:              Test
        working-directory: build\Release\test
        run:               ctest -C Release --output-on-failure
